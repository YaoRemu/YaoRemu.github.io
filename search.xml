<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[新增的主题结构元素（七）]]></title>
    <url>%2F2019%2F04%2F14%2F%E6%96%B0%E5%A2%9E%E7%9A%84%E4%B8%BB%E9%A2%98%E7%BB%93%E6%9E%84%E5%85%83%E7%B4%A0%EF%BC%88%E4%B8%83%EF%BC%89%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[新增的主题结构元素（六）]]></title>
    <url>%2F2019%2F04%2F14%2F%E6%96%B0%E5%A2%9E%E7%9A%84%E4%B8%BB%E9%A2%98%E7%BB%93%E6%9E%84%E5%85%83%E7%B4%A0%EF%BC%88%E5%85%AD%EF%BC%89%2F</url>
    <content type="text"><![CDATA[address元素address元素的简介address元素用来在文档中呈现联系信息，包括文档作者或者文档维护者的名字、他们的网络链接、电子邮箱、真实地址、电话号码等。address应该不只用来呈现电子邮箱或真实地址，还用来展示跟文档相关的联系人的所有联系地址。 123456789101112131415 < /a> < /a>< /address> < /a> 欢迎来到Yaoremu的博客 < /address> 2015-10-10< /time> < /div>< /footer> HTML5的结构大纲编排的规则显示编排内容区域块显示编排是指明确的使用section等元素创建文档结构，在每个区域块使用标题，类似与< h1 > ~ < h6 >或< hgroup >等…… 隐示编排内容区域块所谓隐示编排指不明确使用section等元素，而是根据网页需求，来写各级的< h1 > ~ < h6 >或者< hgroup >，把各级内容区域块自动创建出来 标题分级从< h1 > ~ < h6 >它的级别是不同的，更具标题不同，那么级别也不同。如果新的出现的标题比上一个标题级别低，将生成下级内容区域块；如果新出现的标题比上一标题级别要高，或者两者级别相等的情况下，将生成新的区域块 不同区域块使用相同级别标题eg: 123456789101112131415161718192021222324252627282930 网页标题< /h1> 首页< /a>< /li> 帮助< /a>< /li> < /ul> < /nav>< /header> 文章主标题< /h1> 文章子标题< /h2> < /hgroup> 文章正文< /p> 评论标题< /h1> 评论正文< /p> < /article> < /div> < /section>< /article> 版权所有...< /small>< /footer>]]></content>
      <categories>
        <category>【极客】前端学习</category>
      </categories>
      <tags>
        <tag>前端知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[新增的主题结构元素（五）]]></title>
    <url>%2F2019%2F04%2F13%2F%E6%96%B0%E5%A2%9E%E7%9A%84%E4%B8%BB%E9%A2%98%E7%BB%93%E6%9E%84%E5%85%83%E7%B4%A0%EF%BC%88%E4%BA%94%EF%BC%89%2F</url>
    <content type="text"><![CDATA[time元素与微格式微格式：它是一种利用HTML5的class属性来对网页添加的附属信息的方法，那么附加的信息有可能新闻发生的时间，日期，个人电话号码，企业邮箱等，微格式并不是在HTML5之后才有的，在HTML5之前它就和HTML结合使用了，但是在使用过程当中发现日期和时间的机器编码上出现了一些问题，编码过程中会产生一些歧义。HTML5增加了一个新的元素，来无歧义的，明确的对机器码时间、日期进行编码，并且让人一读，很容易认出它，这个元素就是TIME元素 Time元素： Time元素代表的是24小时中某一个时刻或者某一个日期，它是允许带时差的 12342015-10-10< /time>2015-10-10< /time>2015-10-10< /time>2015-10-10< /time> 编码时，机器读到的在datetime属性当中，而元素的开始标记和结束标记之间的部分是显示在网页上的 datetime属性 日期与时间之间用T来表示，它是一个间隔分隔符（T代表的是Time） Z表示的是机器编码使用的是UTC标准时间 +时间：表示另一地区的时差，如果是在本地编码，而且是在本地使用就不需要再加这个时差 pubdate属性pubdate是一个可选的，布尔类型的值得属性，它可以用在article元素中的time元素上，意思是time元素代表了文章或者整个网页的发布日期，pubdate属性的具体使用方法通过下面案例来演示。 提问：为什么使用pubdate属性，为什么不能直接使用time表示当前发布的一个日期 1234567891011 苹果< /h1> 发布日期 2015-10-10< /time> < /p> 舞会时间 2015-10-12< /time> < /p> < /header>< /article> 此时程序中有两个time，所以我们要有一个明确的time来指出他是一个发布时间，这个时候我们就在第一个time中加上一个pubdate，用它来表示当前具体的发布时间]]></content>
      <categories>
        <category>【极客】前端学习</category>
      </categories>
      <tags>
        <tag>前端知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[新增的主题结构元素（四）]]></title>
    <url>%2F2019%2F04%2F13%2F%E6%96%B0%E5%A2%9E%E7%9A%84%E4%B8%BB%E9%A2%98%E7%BB%93%E6%9E%84%E5%85%83%E7%B4%A0%EF%BC%88%E5%9B%9B%EF%BC%89%2F</url>
    <content type="text"><![CDATA[section元素section元素用于对网站或应用程序中页面上的内容进行分块。一个section元素通常由内容及其标题组成。但section元素并非一个普通的容器元素；当一个容器需要被直接定义样式或通过脚本定义行为时，推荐使用div而非section元素。 通常不推荐为那些没有标题内容使用section元素。 section元素的作用是对页面上的那些内容进行分块，或者说对文章进行分段，请不要与有了自己完整的独立的内容的aritcle元素进行混淆。 123456789101112131415161718 苹果< /h1> 这是一个苹果，可以吃。而且很好吃< /p>< /section> 苹果< /h1> 这是一个苹果，可以吃。而且很好吃 红富士< /h2> 这是一种外表很红的苹果，吃起来也不赖< /p> < /section> 国光< /h2> 这是一种外表很红的苹果，吃起来也不赖< /p> < /section>< /article> 第一行不适用section的原因：这里可以使用section元素，但是由于其结构非常清晰，分析器可以识别第一行内容在一个section元素当中，所以可以将第一个section进行省略 section与article的区别123456789 水果< /h1> pingguo< /h2> 内容< /p> < /article>< /section> 在HTML5中，article元素可以看成是一个特殊类的section元素，它比section元素更加强调独立性，既section元素强调分段或分块，而article元素强调的是独立性。具体来说，如果一块内容相对于比较独立、完整的时候，应该使用article元素；但如果想将一块内容分为几段，那这个时候可以使用section元素。 在HTML5中，div元素作为一个容器的存在，当使用css样式时，可以对这个容器进行总体的css样式的嵌套;即不要讲section元素作为设置样式页面的容器，这是div的工作 总结 不要讲section元素作为设置样式的页面容器； 如果article元素、aside元素、nav元素更符合使用条件，那不要使用section元素 没有标题内容，不要section元素；section元素是要存在一个标题的]]></content>
      <categories>
        <category>【极客】前端学习</category>
      </categories>
      <tags>
        <tag>前端知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[新增的主题结构元素（三）]]></title>
    <url>%2F2019%2F04%2F12%2F%E6%96%B0%E5%A2%9E%E7%9A%84%E4%B8%BB%E9%A2%98%E7%BB%93%E6%9E%84%E5%85%83%E7%B4%A0%EF%BC%88%E4%B8%89%EF%BC%89%2F</url>
    <content type="text"><![CDATA[nav元素是一个可以用在页面导航的连接组，其中的导航元素链接到其他的页面或当前页面的其他部分。并不是所有的连接组都要被放进nav元素，只需要将主要的、基本的链接组放进nav元素即可。 nav元素的应用场景： 传统导航条 侧边栏导航 页内导航 翻页操作 nav元素通常承载一个列表元素 nav元素是可以多处使用的 12345678910111213141516171819202122232425262728293031 主页< /a>< /li> 开发文档< /a>< /li>< /nav> HTML5与CSS3的历史< /h1> HTML5历史< /a>< /li> CSS3历史< /a>< /li> < /ul> < /nav> < /header> HTML5历史< /h1> ....< /p> < /section> CSS3的历史< /h1> ....< /p> < /section> 删除< /a> 修改< /a> < /footer>< /article> 版权声明：< /small>< /p>< /footer> 标签定义文档中的节（section、区段）。比如：章节、页眉、页脚或文档中的其他部分。 注意：HTML5中不能使用menu元素代替nav元素。manu元素是用在一系列发出命令的菜单上的，是一种交互性的元素，确切点说是使用在web应用程序中的。]]></content>
      <categories>
        <category>【极客】前端学习</category>
      </categories>
      <tags>
        <tag>前端知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[新增的主题结构元素（二）]]></title>
    <url>%2F2019%2F04%2F12%2F%E6%96%B0%E5%A2%9E%E7%9A%84%E4%B8%BB%E9%A2%98%E7%BB%93%E6%9E%84%E5%85%83%E7%B4%A0%EF%BC%88%E4%BA%8C%EF%BC%89%2F</url>
    <content type="text"><![CDATA[aside元素aside元素用来表示当前页面或文章的附属信息部分，它可以包含与当前页面或主要内容相关的引用，侧边栏、广告、导航条以及其他类似有区别于主要内容的部分。 article元素内使用aside元素是针对于article元素的名词解释；eg：在< p>下面存放了一个aside元素，用来存放名词解释的部分； 12345678 语法< /h1> 文章的正文......< /p> 名词解释< /h1> 语法：这是一个对语言来说很重要的内容体< /p> < /aside>< /article> article元素之外使用作为页面或站点全局的附属信息部分，最典型的形式是侧边栏，其中的内容是可以有一些链接，博客中的或者是文章列表、广告单元等等； （我们也可以在aside元素中添加一个弹出窗，然后把它当成一个广告单元，在很多论坛上经常会看到在右下角会弹出一个框，可以给它加一下样式，然后让他弹出来就会是一个广告单元；既可以通过aside来进行承载） 1234567891011121314151617181920 语法< /h1> 文章的正文......< /p> 名词解释< /h1> 语法：这是一个对语言来说很重要的内容体< /p> < /aside>< /article> 评论 2018-3-10< /a>< /li> 大牛：真希望能好好学习一下 < /a>< /li> < /nav>< /aside> nav元素：表示导航 通过使用article元素我们可以发现当前页面的语义化是非常明确的，让人读起来是一下就可以了然，我就知道你当前是在哪、或者做什么的、它的具体作用是什么；]]></content>
      <categories>
        <category>【极客】前端学习</category>
      </categories>
      <tags>
        <tag>前端知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[新增的主题结构元素（一）]]></title>
    <url>%2F2019%2F04%2F11%2F%E6%96%B0%E5%A2%9E%E7%9A%84%E4%B8%BB%E9%A2%98%E7%BB%93%E6%9E%84%E5%85%83%E7%B4%A0%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[article元素article元素 代表文档、页面或应用程序中独立的、完整的、可以独自被外部引用的内容。它可以是一篇博客或者报刊中的文章，一篇论坛帖子、一段用户评论或独立的插件，或其他任何独立的内容。 eg: 12345678910 YaoRemu< /h1> Hello，欢迎来到YaoRemu的博客< /p> Hello< /p> 这是底部< /p> < /footer>< /article> article元素是可以嵌套使用的 内层的内容在原则上需要与外层的元素相关联（eg：一篇博客文章中，针对于该文章的评论，就可以使用嵌套article元素的方式，因它们有一个所属关系，用来呈现当前的评论，可以使用article元素来进行包裹一下） eg: 123456789101112131415161718192021 YaoRemu< /h1> Hello，欢迎来到YaoRemu的博客< /p> < /header> 作者 < /header> 评论 < /p> time < /footer> < /aritcle> 这是底部< /p> < /footer>< /article> 为了更加的语义化，更加的方便我们去阅读源码，可以使用article元素，使用article元素代替div后，从语义化来说，它是非常方便的，但是从内容的呈现角度来说，他们是没有区别的。 article元素可以用来表示插件eg: 12345678910111213141516171819202122232425262728 YaoRemu< /h1> Hello，欢迎来到YaoRemu的博客< /p> < /header> 作者 < /header> 评论 < /p> time < /footer> < /aritcle> 这是底部< /p> < /footer>< /article> 这是一个内嵌页面< /h1> < /embed> < /object>< /article> eg: < embed>标签定义嵌入的内容，比如插件（演示中表示引入当前页面）]]></content>
      <categories>
        <category>【极客】前端学习</category>
      </categories>
      <tags>
        <tag>前端知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[新增的元素和废除的元素]]></title>
    <url>%2F2019%2F04%2F11%2F%E6%96%B0%E5%A2%9E%E7%9A%84%E5%85%83%E7%B4%A0%E5%92%8C%E5%BA%9F%E9%99%A4%E7%9A%84%E5%85%83%E7%B4%A0%2F</url>
    <content type="text"><![CDATA[新增的元素新增的结构元素section、article、aside、header、hgroup、footer、nav、figure section：页面中的内容块（eg：章节、页眉、页脚……），可以与< h1>~< h6>等元素结合使用，表示文档的结构 article：页面中的一块与上下文不相干的独立内容（eg：博客中的一篇文章、报纸中的一篇文章） aside：表示article元素内容之外的，与article元素内容相关的补助信息 header：表示页面中的一个内容区域块，通常用它来表示标题 hgroup：用于对整个页面或者页面中的一个内容块的标题进行结合 footer：表示页面中的一个部分、一个区域块，通常表示这个区域块的脚部（底部），通常我们会用它来承载作者的姓名，日期等一下与作者相关的元素 nav：表示页面中的导航链接部分 figure：表示一段独立的流的内容，一般表示文档中主体流内容中的一个独立的单元 新增的其他元素video、audio、embed、mark、progress、meter、time、ruby、rt、rp、wbr、canvas、command、details、datalist、datagrid、keygen、output、source、menu video：video元素来定义视频（eg：电影片段、视频流） audio：定义音频、音乐或者音频流 canvas：画布，对于画布我们比较注重，因为无论是在应用当中还是在游戏当中，我们对canvas的应用都比较多；canvas表示图形（eg：图表或者其他图形），这个元素本身没有行为，仅仅提供一块画布，但它的一个绘图API展示给客户端JavaScript以及脚本，能够把想绘制的东西绘制在这块画布上 新增的input元素的类型email、url、number、range、Date Pickers email：email表示必须输入的email地址 url：表示文本框输入的一个地址 number：表示数字 range：表示输入框内的一个数字的范围值 Date Pickers：关于日历的日期，时间， 废除的元素能使用CSS替代的元素：basefont、big、center、font、s、tt、u等不再使用frame框架对于< frameset>元素，< frame>元素以及< noframes>元素，由于frame框架对网页可用性存在负面的影响，在HTML5当中以及不支持frame框架，只支持iframe，或者用服务器创建的由多个页面组成的复合页面的形式，同时，以上三个元素被废除 只能部分浏览器支持的元素其他被废除的元素新增的属性和废除的属性新增的属性 表单相关的属性 链接相关的属性 其他属性 废除的属性在后面的文章进行详解]]></content>
      <categories>
        <category>【极客】前端学习</category>
      </categories>
      <tags>
        <tag>前端知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML5与HTML4区别]]></title>
    <url>%2F2019%2F04%2F10%2FHTML5%E4%B8%8EHTML4%E5%8C%BA%E5%88%AB%2F</url>
    <content type="text"><![CDATA[推出理由及目标HTML5的储蓄，对于Web来说的意义是非常重大的，因为他的意图是想把目前Web上纯在的各种问题一并解决掉了。 Web浏览器之间的兼容性很低 （规范不统一，没有标准化） 文档结构不够明确 （之前表示文档的标题、正文都是使用< div>来排版，结构比较混乱） Web应用程序的功能收到了限制 世界知名浏览器厂商对HTML5的支持：微软（IE9以下不支持）、Google、苹果、opera、Mozilla 语法的改变内容类型文件扩展符（.html、.htm）与内容类型（text.html）保持不变； DOCTYPE声明在HTML4中，我们要明确的指出是哪一个版本；而在HTML5中可以省略部分内容； eg: < !DOCTYPE html> 指定字符编码在HTML4中需要很多声明；eg: < meta http-equiv="content-type" content="text/html;charset=UTF-8"> 在HTML5中则非常简单；eg: < meta charset="UTF-8"> 可以省略标记的元素在HTML5中，元素的标记可以进行省略（详细内容之后再提）； 具有boolean值的属性当这些属性值不指定属性值时，默认表现为true；如果想将属性设为固定的true，可将属性值设为属性名，或者字符串设置为空，不写（默认为true）； 如果想将属性值设为false，可不写该属性； eg: 前三true，最后一个false 省略引号指定属性值时，必须指定引号；但是在HTML5中，可以省略引号;]]></content>
      <categories>
        <category>【极客】前端学习</category>
      </categories>
      <tags>
        <tag>前端知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[新增的属性和废除的属性]]></title>
    <url>%2F2019%2F04%2F10%2F%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0-%E5%85%A8%E5%B1%80%E5%B1%9E%E6%80%A7%2F</url>
    <content type="text"><![CDATA[contentEditable属性允许用户编辑元素中的内容，取值为true【可编辑】、false【不可编辑】eg: designMode属性指定整个页面是否可以编辑（只能在JavaScript中修改编辑），取值：on【可编辑】、off【不可编辑】 hidden属性通知浏览器不渲染该元素，使该元素为不可见状态，取值：true【可见状态】、false【不可见状态】eg:不可见状态 spellcheck属性针对input元素与textarea文本输入框提供的新属性，对用户输入的文本内容进行拼写和文本检查eg: tabindex属性不断敲击tab键，让窗口或页面中的控件获得焦点，对窗口中的所有控件进行遍历，每一个tableindex属性表示该接口是第几个访问到的eg:]]></content>
      <categories>
        <category>【极客】前端学习</category>
      </categories>
      <tags>
        <tag>前端知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkDown进阶操作]]></title>
    <url>%2F2019%2F04%2F10%2FMarkDown%E8%BF%9B%E9%98%B6%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[图片处理有时候希望图片变得小一点，或者让他靠左边，使得排版更加美观，但是默认没有提供这类操作，可以直接引入HTML来设置； 基本形式 ！[图片描述]（图片链接） 例子： ！[头像]（ http://ww1.sinaimg.cn/large/8c0b2220gy1g1ae3jfoogj20du0duwf0.jpg ） 自定义尺寸 < img width=’150’ height=’150’ src=” http://ww1.sinaimg.cn/large/8c0b2220gy1g1ae3jfoogj20du0duwf0.jpg “> 插入音乐在网易云音乐生成外连接，直接复制黏贴即可；（如果不想自动播放，可以把auto改成0） < iframe frameborder=”no” border=”0” marginwidth=”0” marginheight=”0” width=330 height=86 src=”//music.163.com/outchain/player?type=2&id=29979976&auto=1&height=66”> 插入视频 视频与图片和音乐同理，不在赘述； 设置不同的字体颜色 < font color=red>我是红色 eg: 我是红色 设置不同类型的字体 < font face=”黑体”>我是黑体 eg: 我是黑体 添加背景色 < table>< tr>< td bgcolor=”red”> 背景色是:red < / td>< / tr>< / table> eg: 背景色是:red]]></content>
      <categories>
        <category>教学</category>
      </categories>
      <tags>
        <tag>MarkDown基本语法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络端口地址转换NAPT配置]]></title>
    <url>%2F2019%2F03%2F31%2F%E7%BD%91%E7%BB%9C%E7%AB%AF%E5%8F%A3%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2NAPT%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[拓扑图 相关知识①：NAT将网络划分为内部网络和外部网络两部分，局域网主机利用NAT访问网络时，是将局域网内部的本地地址转换为全局地址（互联网合法的IP地址）后转发数据包； 相关知识②：NAT分为两种类型：NAT（网络地址转换）和NAPT（网络端口地址转换IP地址对应一个全局地址）； 相关知识③：NAPT：使用不同的端口来映射多个内网IP地址到一个指定的外网IP地址，多对一。NAPT采用端口多路复用方式。内部网络的所有主机均可共享一个合法外部IP地址实现对Internet的访问，从而可以最大限度地节约IP地址资源。同时，又可以隐瞒内部的所有主机，有效的避免来自Internet的攻击。因此，目前网络中应用最多的就是端口多路复用方式 配置命令配置Router0enable configure terminal hostname R0 配置端口interface fa0/0 ip address 192.168.1.1 255.255.255.0 no shutdown exit interface s0/0/0 ip address 200.1.1.1 255.255.255.0 no shutdown clock rate 64000 exit 配置Router1enable configure terminal hostname R1 配置端口interface s0/0/0 ip address 200.1.1.2 255.255.255.0 no shutdown exit interface fa0/0 ip address 200.1.2.1 255.255.255.0 no shutdown exit 配置Router0静态路由ip route 200.1.2.0 255.255.255.0 200.1.1.2 配置Router1静态路由ip route 192.168.1.0 255.255.255.0 200.1.1.1 查看路由表end show ip route 使用PC1测试能否与服务器通信CMD Web浏览器 Router0上进行网络端口地址转换NAPT配置interface fa0/0 ip nat inside //设定私有地址连接口 exit interface fa2/0 ip nat outside //设定公有地址连接口 exit access-list 1 permit 192.168.1.0 0.0.0.255 //建立一个控制列表，列表名为1，用来定义内部使用的私有IP地址段，为地址段转换为公网IP做准备 ip nat pool 5ijsj 200.1.1.3 200.1.1.3 netmask 255.255.255.0 //定义一个IP地址池 ip nat inside source list 1 pool 5ijsj overload //启用内部源地址转换为动态NAT //无overload表示多对多，有overload表示多对一 end show ip nat translations //查看NAT转发表 实验结果PC1使用Web浏览器范文服务器 查看NAT转发表show ip nat translations(有1个结果) PC2使用web浏览器访问服务器 eg: 再次查看NAT转发表show ip nat translations(有2个结果) eg:]]></content>
      <categories>
        <category>Cisco</category>
      </categories>
      <tags>
        <tag>Cisco基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络地址转换NAT配置]]></title>
    <url>%2F2019%2F03%2F30%2F%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2NAT%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[拓扑图 相关知识①：网络地址转换NAT（Network Address Translation）,被广泛应用于各种类型Internet接入方式和各种类型的网络中。原因很简单，NAT不仅完美地解决了IP地址不足的问题，而且还能够有效地避免来自网络外部的攻击，隐藏并保护网络内部的计算机。 相关知识②：默认情况下，内部IP地址是无法被路由到外网的，内部主机10.1.1.1要与外部Internet通信，IP包到达NAT路由器时，IP包头的源地址10.1.1.1被替换成一个合法的外网IP，并在NAT转发表中保存这条记录。 当外部主机发送一个应答到内网时，NAT路由器收到后，查看当前NAT转换表，用10.1.1.1替换掉这个外网地址。 相关知识③：NAT将网络划分为内部网络和外部网络两部分，局域网主机利用NAT访问网络时，将局域网内部的本地地址转换为全局地址（互联网合法的IP地址）后转发数据包； 相关知识④：NAT分为两种类型：NAT（网络地址转换）和NAPT（网络端口地址转换IP地址对应一个全局地址）；①、 静态NAT：实现内部地址与外部地址一对一映射。现实中，一般都用于服务器；②、 动态NAT：定义一个地址池，自动映射，也是一对一的。现实中，用的比较少；③、 NAPT：使用不同的端口来映射多个内网IP地址到一个指定的外网IP地址，多对一； 配置命令配置Router0enable configure terminal hostname R0 配置路由器端口interface fa0/0 ip address 192.168.1.1 255.255.255.0 no shutdown exit interface s0/0/0 ip address 222.0.1.1 255.255.255.0 no shutdown clock rate 64000 exit 配置Router1enable configure terminal hostname R1 配置路由器端口interface s0/0/0 ip address 222.0.1.2 255.255.255.0 no shutdown exit interface fa0/0 ip address 222.0.2.1 255.255.255.0 no shutdown exit Router0静态路由配置ip route 222.0.2.0 255.255.255.0 222.0.1.2 Router1静态路由配置ip route 192.168.1.0 255.255.255.0 222.0.1.1 使用PC0尝试与服务器通信ping 192.168.1.2 （成功通信） Web浏览器 （成功通信） Router0进行NAT配置interface fa0/0 ip nat inside //设定私有地址连接口(局域网) exit interface fa s0/0/0 ip nat outside //设定公有地址连接口(广域网) exit ip nat inside source static 192.168.1.2 222.0.1.3 //设置NAT地址，将内网地址映射为外网地址 end show ip nat translations //查看NAT转发表 知识点①：对于路由器来说：①inside对应的是access-list（访问控制列表）、②outside对应的是转换地址池； 实验结果ping被转换后的地址： 222.0.1.3 （成功通信） Web浏览器中尝试访问转换后的地址：222.0.1.3 （成功通信）]]></content>
      <categories>
        <category>Cisco</category>
      </categories>
      <tags>
        <tag>Cisco基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[扩展IP访问控制列表配置]]></title>
    <url>%2F2019%2F03%2F29%2F%E6%89%A9%E5%B1%95IP%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E5%88%97%E8%A1%A8%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[拓扑图 知识点①：访问控制列表定义的典型规则主要有以下：源地址，目标地址，上层协议，时间区域；扩展IP访问列表（编号100-199、2000、2699）使用以上四种组合来进行转发或阻断分组；可以根据数据包的源IP、目的IP、源接口、目的接口、协议来定义规则，进行数据包的过滤。 知识点②：扩展IP访问列表的配置包括以下两部分：①定义扩展IP访问列表；②将扩展IP访问列表应用于特定接口上； 配置命令配置Router0端口enable configure terminal hostname R0 interface fa0/0 ip address 172.16.1.1 255.255.255.0 no shutdown exit interface fa0/1 ip address 172.16.2.1 255.255.255.0 no shutdown exit 配置Router1端口enable configure terminal hostname R1 interface fa0/1 ip address 172.16.2.2 255.255.255.0 no shutdown exit interface s0/0/0 ip address 172.16.3.1 255.255.255.0 no shutdown clock rate 64000 配置Router2端口enable configure terminal hostname R2 interface s0/0/0 ip address 172.16.3.2 255.255.255.0 no shutdown exit interface fa0/0 ip address 172.16.4.1 255.255.255.0 no shutdown exit 配置Router0静态路由ip route 0.0.0.0 0.0.0.0 172.16.2.2 配置Router2静态路由ip route 0.0.0.0 0.0.0.0 172.16.3.1 配置Router1静态路由ip router 172.16.1.0 255.255.255.0 172.16.2.1 ip router 172.16.4.0 255.255.255.0 172.16.3.2 end show ip route //查看路由表 实验PC0尝试与服务器通信ping 172.16.4.2（此时成功通信） 使用网页尝试通信 Router1上配置扩展IP访问控制列表configure terminal 允许源主机地址使用TCP协议通过出站端口访问目标地址WEB服务器access-list 100 permit tcp host 172.16.1.2 host 172.16.4.2 eq www 禁止源主机地址使用icmp协议通过出站端口到达目标主机地址WEB服务器access-list 100 deny icmp host 172.16.1.2 host 172.16.4.2 echo 知识点①：echo表示：传递echo报文 知识点②：ICMP协议（Internet Control Message Protocol Internet控制报文协议）：TCP/IP协议簇的一个子协议，用在IP主机，路由器之间传递控制消息；控制消息：指网络通不通，主机是否可达、路由是否可用等网络本身的消息； 将ACL应用到端口interface s0/0/0 ip access-group 100 out end 实验结果ping 172.16.4.2（此时无法通信） 使用网页尝试通信（此时成功通信）]]></content>
      <categories>
        <category>Cisco</category>
      </categories>
      <tags>
        <tag>Cisco基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[标准 IP 访问控制列表配置]]></title>
    <url>%2F2019%2F03%2F28%2F%E6%A0%87%E5%87%86-IP-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E5%88%97%E8%A1%A8%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[拓扑图 相关知识①：ACLs 的全称为 接入控制列表(Access Control Lists),也称访问控制列表(Access Lists),俗称防火墙，在有的文档中还称包过滤。 相关知识②：ACLs 通过定义一些规则对网络设备接口上的数据报文进行控制；运行通过或者丢失，从而提高网络可管理型和安全性； 相关知识③：IP ACL分为两种：标准IP访问列表和扩展IP访问列表，编号范围为 1~99、1300~1999、100~199、2000~2699;标准IP访问控制列表：根据数据包的源地址定义规则，进行数据包的过滤；扩展IP访问控制列表：根据数据包的源IP、目的IP、源接口、目的端口、协议来定义规则，进行数据包的过滤； 相关知识④：IP ACL 基于接口进行规则的应用，分为：入栈应用和出栈应用； 配置命令配置路由器0enable configure terminal hostname R0 配置端口interface fa 0/0 ip address 172.16.1.1 255.255.255.0 no shutdown exit interface fa0/1 ip address 172.16.2.1 255.255.255.0 no shutdown exit interface s0/0/0 ip address 172.16.3.1 255.255.255.0 no shutdown clock rate 64000 exit 配置路由器1enable configure terminal hostname R1 配置端口interface s0/0/0 ip address 172.16.3.2 255.255.255.0 no shutdown exit interface f0/0 ip address 172.16.4.1 255.255.255.0 no shutdown exit 配置路由器0的静态路由配置静态路由ip route 172.16.4.0 255.255.255.0 172.16.3.2 配置路由器1的静态路由配置静态路由ip route 0.0.0.0 0.0.0.0 172.16.3.1 查看路由表end show ip route PC0、PC1尝试能否与PC2通信PC0: （此时成功通信） PC1: （此时成功通信） 在路由器0中配置访问控制列表建立ACL命名为 5ijsjip access-list standard 5ijsj permit 172.16.1.0 0.0.0.255 //允许网段通过 deny 172.16.2.0 0.0.0.255 //禁止网段通过 interface s0/0/0 ip access-group 5ijsj out //将ACL应用到相关端口 end 知识点：in表示过滤入口的包；out表示过滤出口的包； 实验结果再次PC0、PC1尝试能否与PC2通信PC0: （由于ACL允许 172.16.1.0 网段通过，所以PC0成功通信） PC1: （由于ACL禁止 172.16.1.0 网段通过，所以PC1通信失败）]]></content>
      <categories>
        <category>Cisco</category>
      </categories>
      <tags>
        <tag>Cisco基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[OSPF、RIP小记]]></title>
    <url>%2F2019%2F03%2F28%2FOSPF%E3%80%81RIP%E5%B0%8F%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[OSPF可将OSPF比喻成导航，可以实时更新； RIP将RIP比喻成路标，是固定不变的，除非人为修改；]]></content>
      <categories>
        <category>Cisco</category>
      </categories>
      <tags>
        <tag>Cisco笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[路由器综合路由配置]]></title>
    <url>%2F2019%2F03%2F27%2F%E8%B7%AF%E7%94%B1%E5%99%A8%E7%BB%BC%E5%90%88%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[拓扑图 相关知识①：运行多个路由协议进程，系统软件提供了路由信息从一个路由进程重新分布到另一个路由进程的功能；路由的相互重分布可以再所有的IP路由协议之间进行。相关命令：redistribute protocol … 相关知识②：路由重分发，可在同一网内使用多种路由协议，为了实现多种路由协议的协同工作，路由器可以使用路由重分发(route redistribution) 将学习到的一种路由协议的路由通过另一种路由协议广播出去，这样网络的所有部分就可以互通了。为了实现重分发，路由器必须同时运行多种路由协议，这样每种路由协议才可以取路由表中的所有或部分其他协议的路由来进行广播； 配置命令配置三层路由器Switch0enable configure terminal 开启Vlanvlan 2 exit 划分Vlan给端口fa0/10interface fa0/10 switchport access vlan 2 exit 注意：由于vlan1默认是划分给所有端口的，所以可以省略划分vlan1 配置Vlaninterface vlan 1 ip address 192.168.1.1 255.255.255.0 no shutdown exit interface vlan 2 ip address 192.168.2.1 255.255.255.0 no shutdown exit 查看Vlan信息end show interface vlan 1 在路由器上启动rip协议configure terminal ip routing //开启三层交换机路由功能 router rip //配置RIP协议 network 192.168.1.0 //宣告本地路由和相连路由之间的网段 network 192.168.2.0 version 2 //设置RIP版本 配置路由器Router0enable configure terminal hostname R1 配置端口interface fa0/0 ip address 192.168.2.2 255.255.255.0 no shutdown exit interface fa0/1 ip address 192.168.3.1 255.255.255.0 no shutdown exit 在路由器启动rip协议router rip network 192.168.2.0 version 2 在路由器启动ospf协议router ospf 1 //配置OSPF协议 network 192.168.3.0 0.0.0.255 area 0 //宣告直连网络 配置路由器Router1enable configure terminal hostname R2 配置端口interface fa0/1 ip address 192.168.3.2 255.255.255.0 no shutdown exit interface fa0/0 ip address 192.168.4.1 255.255.255.0 no shutdown exit 在路由器启动ospf协议router ospf 1 network 192.168.3.0 0.0.0.255 area 0 network 192.168.4.0 0.0.0.255 area 0 查看路由表end show ip route 实验结果使用Router0（中间的路由器）测试与两台PC是否能够通信ping 192.168.1.2 (success) ping 192.168.4.2 (success) 尝试PC0与PC1通信 （此时无法通信） 配置Router0（中间的路由器）configure terminal 路由重分布router rip redistribute ospf 1 //ospf路由重发布 exit router ospf 1 redistribute rip subnets //rip路由重发布 end 注意： 本例在Packet Tracer 5.2上能够正常运行，但是在Packet Tracer 5.3 上的Switch0不能学习到192.168.3.0/192.168.4.0的路由信息，所以需要给Switch0指定静态路由: ip route 0.0.0.0 0.0.0.0 192.168.2.2 再次Router1查看路由表 （查看路由重发布后该路由器学习到的路由） show ip route 再次尝试PC0与PC1通信 （成功通信）]]></content>
      <categories>
        <category>Cisco</category>
      </categories>
      <tags>
        <tag>Cisco基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[路由器OSPF动态路由配置]]></title>
    <url>%2F2019%2F03%2F26%2F%E8%B7%AF%E7%94%B1%E5%99%A8OSPF%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[拓扑图 相关知识①：OSPF(Open Shortest Path First 开放式最短路径优先)是一个内部网关协议(Interior Gateway Protocol，检测IGP)，用在单一自治系统(autonomous system,AS)内决策路由。与RIP相比，OSPF是链路状态协议，而RIP是距离矢量协议。 相关知识②：OSPF开放式最短路径优先协议，是目前网络中应用最广泛的路由协议之一；OSPF路由协议通过向全网扩散本设备的链路状态信息，使网络中每台设备最终同步一个具有全网链路状态的数据库，然后路由器采用SPF算法，以自己为根，计算到达其他网络的最短路径，最终形成全网路由信息； 配置命令配置三层交换机S3569enable configure terminal hostname S3569 划分Vlan给端口vlan 10 exit valn 20 exit interface fa 0/10 switchport access vlan 10 exit interface fa 0/20 switchport access vlan 20 exit 配置Vlaninterface vlan 10 ip address 192.168.1.1 255.255.255.0 no shutdown exit interface vlan 20 ip address 192.168.3.1 255.255.255.0 no shutdown exit end show ip route //查看路由表 配置OSPF动态路由协议configure terminal ip routing //开启三层交换机路由功能 router ospf 1 //启动OSPF进程 network 192.168.1.0 0.0.0.255 area 0 //通告直连网络 network 192.168.3.0 0.0.0.255 area 0 end show ip route 知识点①：OSPF宣告是要加反掩码的； 知识点②：area是自治系统区域的标识，eg：如果全局在一个area中，那么它们属于一个自治系统，也成单区域自治系统； 配置路由器R1enable configure terminal hostname R1 配置端口interface fa0/0 no shutdown ip address 192.168.3.2 255.255.255.0 exit interface serial 0/0/0 no shutdown clock rate 64000 ip address 1952.168.4.1 255.255.255.0 end show ip route 配置OSPF动态路由协议configure terminal router ospf 1 network 192.168.3.0 0.0.0.255 area 0 network 192.168.4.0 0.0.0.255 area 0 end show ip route 配置路由器R2enable configure terminal hostname R2 配置端口interface fa 0/0 no shutdown ip address 192.168.2.1 255.255.255.0 exit interface serial 0/0/0 no shutdown ip address 192.168.4.2 255.255.255.0 end show ip route 配置OSPF动态路由协议configure terminal router ospf 1 network 192.168.2.0 0.0.0.255 area 0 network 192.168.4.0 0.0.0.255 area 0 end show ip route 实验结果验证 PC1、PC2 主机之间可以互相通信；eg:]]></content>
      <categories>
        <category>Cisco</category>
      </categories>
      <tags>
        <tag>Cisco基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[路由器RIP动态路由配置]]></title>
    <url>%2F2019%2F03%2F25%2F%E8%B7%AF%E7%94%B1%E5%99%A8RIP%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[拓扑图 相关知识①：动态路由是指路由器能够自动的建立自己的路由表，并且根据实际情况适时的进行调整； 相关知识②：RIP(routing infromation protocol)路由信息协议：一种内部网关协议（IGP），是一种动态路由选择协议；RIP协议基于距离矢量算法，使用“跳数(metric)”来衡量到达目标地址的路由协议。（该协议的路由器只关心自己周围的世界，只与自己相连的路由器交换信息，范围在15跳之内）； 相关知识③：RIPv1与RIPv2的区别： 配置命令配置三层交换机enable configure terminal hostname S3560 划分vlan给端口vlan 10 exit vlan 20 exit interface fa0/10 switchport access vlan 10 exit interface fa0/20 switchport access vlan20 exit end show vlan 配置vlanconfigure terminal interface vlan 10 ip address 192.168.1.1 255.255.255.0 no shutdown exit interface vlan 20 ip address 192.168.3.1 255.255.255.0 no shutdown end show ip router //查看路由表 show running //查看当前配置 在三层交换机上启动rip协议configure terminal router rip //启动rip协议 network 192.168.1.0 //宣告本地路由和相连路由之间的网段 network 192.168.3.0 version 2 //设置RIP版本为2 end show ip route 配置Router2enable configure terminal hostname R2 配置端口interface fa0/0 no shutdown ip address 192.168.3.2 255.255.255.0 interface serial0/0/0 //配置路由器的串行接口 no shutdown ip address 192.168.4.1 255.255.255.0 clock rate 64000 //配置时钟频率 end show ip route 知识点①：在Packet Tracert模拟器中，必须设置时钟速率，否则路由器之间无法ping通； 知识点②：serial口：路由器连接路由器就要用路由器上的Serial端口连接 在路由器上启动rip协议conf t router rip network 192.168.3.0 network 192.168.4.0 version 2 exit 配置Router1enable configure terminal hostname R1 配置端口interface fa0/0 no shutdown ip address 192.168.2.1 255.255.255.0 interface serial0/0/0 no shutdown ip address 192.168.4.2 255.255.255.0 end show ip route 在路由器上启动rip协议configure terminal router rip network 192.168.2.0 network 192.168.4.0 version 2 end 实验结果查看拓扑图中的的两台PC是否正常通信；eg:]]></content>
      <categories>
        <category>Cisco</category>
      </categories>
      <tags>
        <tag>Cisco基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[路由器静态路由配置]]></title>
    <url>%2F2019%2F03%2F24%2F%E8%B7%AF%E7%94%B1%E5%99%A8%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[拓扑图 注：由于路由器[2811]初始时没有Serial接口，所以需要在图形化界面安装上[WIC-2T]组件； 配置命令配置Router1各个端口enable configure terminal hostname R1 interface fa0/1 no shutdown //开启端口 ip address 192.168.1.1 255.255.255.0 //配置端口IP以及子网掩码 exit interface serial 0/0/0 //配置串行接口 no shutdown ip address 192.168.3.1 255.255.255.0 clock rate 64000 //设置时钟评率，起同步作用 end 知识点①：Serial是用V35线来传输数据是同步的，连接时需要DCE同步时钟速率； 知识点②： 路由器连接路由器要用路由器上的Serial端口连接； 配置Router2各个端口enable configure terminal hostname R2 interface fa0/1 no shutdown ip address 192.168.2.1 255.255.255.0 exit interface serial 0/0/0 ip address 192.168.3.2 255.255.255 no shutdown end 配置R1静态路由enable configure terminal ip route 192.168.2.0 255.255.255.0 192.168.3.2 //配置静态路由 end show ip route //查看路由表 知识点①：ip route 静态路由格式： ip route 目标网段 目标的子网掩码 目标网段的接口 配置R2静态路由enable configure terminal ip route 192.168.1.0 255.255.255.0 192.168.3.1 //配置静态路由 end show ip route 实验结果测试PC1是否ping通PC2;eg:]]></content>
      <categories>
        <category>Cisco</category>
      </categories>
      <tags>
        <tag>Cisco基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[路由器单臂路由配置]]></title>
    <url>%2F2019%2F03%2F23%2F%E8%B7%AF%E7%94%B1%E5%99%A8%E5%8D%95%E8%87%82%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[拓扑图 配置命令配置Switchenable configure terminal vlan 2 exit vlan 3 exit interface fastEthernet 0/2 switchport access vlan 2 //将端口划分给Vlan2 exit interface fastEthernet 0/3 switchport access vlan 3 //将端口划分给Vlan3 exit interface fastEthernet 0/1 switchport mode trunk //设置端口为trunk模式 知识点：数据包经过trukn会封装新的包头，添加对应的Vlan信息；当目标接受到该数据包，即可解包查看对应的Vlan，然后发送个对应的Vlan； 配置Routerenable configure terminal interface fastEthernet 0/0 no shutdown //开启路由器端口 exit interface fastEthernet 0/0.1 //配置虚拟子接口 encapsulation dot1q 2 //配置以太网子接口Vlan号，封装格式为802.1q ip address 192.168.1.1 255.255.255.0 //设置端口ip及其子网掩码 exit interface fastEthernet 0/0.2 encapsulation dot1q 3 ip address 192.168.2.1 255.255.255.0 end show ip route //查看路由表信息 知识点①：dot1q(802.1q): 虚拟局域网标准，在路由器中dot1q为虚拟局域网的封装模式； 知识点②：为什么要划分子接口？ 多vlan通信，各vlan间的网段不同，网关不同，但是交换机只连接路由器上的一个物理端口，所以划分多个虚拟子接口，以便于配置多个地址作为vlan的网关地址 实验结果PC1与PC2实现多Vlan通信； eg:]]></content>
      <categories>
        <category>Cisco</category>
      </categories>
      <tags>
        <tag>Cisco基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[快速生成树配置]]></title>
    <url>%2F2019%2F03%2F22%2F%E5%BF%AB%E9%80%9F%E7%94%9F%E6%88%90%E6%A0%91%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[拓扑图 配置命令Switch1配置命令enable //进入特权模式 show spanning-tree //查看生成树配置 configure terminal //全局配置模式 hostname S1 //交换机更名 int fa 0/10 switchport access vlan 10 //把端口划分给Vlan 10 exit int rang fa 0/1-2 switchport mode trunk //配置端口为trunk模式 exit spanning-tree mode rapid-pvst //把交换机的生成树模式由默认的STP改成RSTP(快速生成树) end 知识点：trunk端口可封装Vlan标签，用于多Vlan交换机 Switch2配置命令enable configure terminal hostname S2 interface fa0/10 switchport access vlan 10 exit interface range fa0/1-2 switchport mode trunk exit spanning-tree mode rapid-pvst //把交换机的生成树模式由默认的STP改成RSTP(快速生成树) end show spanning-tree 知识点：PVST(per Vlan Spanning Tree)：生成树协议； RSTP(Rapid Spanning Tree Protocol):快速生成树协议;在STP的基础上实现了快速收敛，并增加了边缘端口的概念及保护； 实验结果 当主链路处于down状态的时候，交换机能够自动切换到备份链路，保证数据的正常转发； eg: 使用PC1 ping PC2ipconfig ping -t 192.168.1.3 //-t表示在手动停止前，一直发送数据包 关闭S2正常运行端口，测试快速生成树协议en conf t interface fa 0/1 shutdown //关闭正常运行的端口测试是否自动切换到备份链路 使用ping -t ip 不断的请求PC2，然后关闭正在通信的Fa0/1接口，最后查看PC1中通信情况是否正常（即交换机是否自动切换到备份链路）；]]></content>
      <categories>
        <category>Cisco</category>
      </categories>
      <tags>
        <tag>Cisco基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用三层交换机实现Vlan间路由]]></title>
    <url>%2F2019%2F03%2F21%2F%E5%88%A9%E7%94%A8%E4%B8%89%E5%B1%82%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%AE%9E%E7%8E%B0Vlan%E9%97%B4%E8%B7%AF%E7%94%B1%2F</url>
    <content type="text"><![CDATA[拓扑图 配置命令配置二层交换机enable //特权模式 configure terminal //全局配置模式 vlan 2 //开启vlan exit vlan 3 exit interface fa0/2 switchport access vlan 2 //配置端口在access模式，允许vlan2通过 exit interface fa0/3 switchport access vlan 3 exit interface fa0/1 switchport mode trunk //配置该端口为trunk模式 exit show vlan //查看vlan配置 配置三层交换机enable configure terminal vlan 2 exit vlan 3 exit interface fa0/1 switchport trunk encapsulation dot1q //给端口封装802.1q协议(dot1q),既trunk链路的中继协议 switchport mode trunk //配置该端口为trunk模式 exit interface fa0/2 switchport access vlan 2 exit interface vlan 2 //配置vlan 2 ip address 192.168.1.1 255.255.255.0 //配置IP及其子网掩码 no shutdown //开启vlan 2 exit interface vlan 3 ip address 192.168.2.1 255.255.255.0 no shutdown exit exit ip routing //启用三层交换机IP路由功能 show ip route //查看路由表 实验结果PC3分别ping测试PC1、PC2，实验结果为： PC3ping通PC1；PC3ping通PC2,实现了路由功能； eg:]]></content>
      <categories>
        <category>Cisco</category>
      </categories>
      <tags>
        <tag>Cisco基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[cisco多交换机之间的端口聚合链路]]></title>
    <url>%2F2019%2F03%2F20%2Fcisco%E5%A4%9A%E4%BA%A4%E6%8D%A2%E6%9C%BA%E4%B9%8B%E9%97%B4%E7%9A%84%E7%AB%AF%E5%8F%A3%E8%81%9A%E5%90%88%E9%93%BE%E8%B7%AF%2F</url>
    <content type="text"><![CDATA[拓扑图： 相关知识：port-channel具备了逻辑端口的属性，真正成为一个独立的逻辑端口；端口汇聚是一种逻辑上的抽象过程，将一组具备相同属性的端口，抽象成一个逻辑端口；其不仅能增加网络的带宽，还能提供链路的备份功能，以及负载均衡； 配置命令Switch0的配置命令hostname SwitchA //更名 int port-channel 1 //端口聚合模式 exit int fa0/1 channel-group 1 mode on //将物理端口加入channel-group exit int fa0/2 channel-group 1 mode on exit int fa0/3 channel-group 1 mode on exit int port-channel 1 switchport mode trunk //将端口聚合配置为trunk模式 switchport trunk allowed vlan all Switch1的配置命令hostname SwitchA int port-channel 1 exit interface fa0/1 channel-group 1 mode on exit interface fa0/2 channel-group 1 mode on exit interface fa0/3 channel-group 1 mode on exit int port-channel 1 switchport mode trunk switchport trunk allowed vlan all 结果使用show run查看结果： 知识点 链路聚合的配置，实现交换机间的端口聚合，扩展网络宽带，实现链路冗余备份；]]></content>
      <categories>
        <category>Cisco</category>
      </categories>
      <tags>
        <tag>Cisco基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[cisco多交换机上配置基于端口的Vlan隔离办公网络]]></title>
    <url>%2F2019%2F03%2F19%2Fcisco%E5%A4%9A%E4%BA%A4%E6%8D%A2%E6%9C%BA%E4%B8%8A%E9%85%8D%E7%BD%AE%E5%9F%BA%E4%BA%8E%E7%AB%AF%E5%8F%A3%E7%9A%84Vlan%E9%9A%94%E7%A6%BB%E5%8A%9E%E5%85%AC%E7%BD%91%E7%BB%9C%2F</url>
    <content type="text"><![CDATA[拓扑图 配置命令配置左边的交换机enable //特权模式 configure terminal //全局模式 interface fa 0/1 switchport mode trunk //配置Trunk switchport trunk allowed vlan all //trunk允许所有Vlan流量通行（默认trunk就是允许所有） vlan 10 //开启vlan name RD1 //命名 vlan 20 name RD2 interface range fa0/9-fa0/16 //配置一组接口 switchport access vlan 10 //把该端口划分给Vlan exit interface range f0/17-fa0/24 switchport access vlan 20 exit 配置右边的交换机enable configure terminal interface fa0/1 switchport mode trunk switchport trunk allowed vlan all vlan 10 name RD1 vlan 20 name RD2 interface range fa0/9-fa0/16 switchport access vlan 10 exit interface range fa0/17-fa0/24 switchport access vlan 20 exit 注意： access为链接电脑的端口或者傻瓜交换机（也就是同一Vlan的交换机）；trunk则肯定是连接交换机的（属于多vlan的交换机）; 测试结果结果：PC1与PC3、PC2与PC4之间能相互ping通，除此以外的任意两台电脑上ping不通的；]]></content>
      <categories>
        <category>Cisco</category>
      </categories>
      <tags>
        <tag>Cisco基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkDown基础教学]]></title>
    <url>%2F2019%2F03%2F18%2FMarkDown%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6%2F</url>
    <content type="text"><![CDATA[基础语法标题# h1 ## h2 ### h3 #### h4 ##### h5 ###### h6 段落及区块引用> 这段文字被高亮显示... eg: 这段文字被高亮显示… 插入链接或图片[点击跳转百度](http://www.baidu.com) eg:点击跳转百度 ![图片](https://i.loli.net/2019/03/19/5c903bc01be37.gif) eg: 列表Markdown支持有序列表和无序列表两种形式： 无序列表使用 * 或 + 或 - 标识 * 黄瓜 * 玉米 * 茄子 + 黄瓜 + 玉米 + 茄子 - 黄瓜 - 玉米 - 茄子 有序列表使用数字加.标识，eg: 1. 1. 玉米 2. 黄瓜 3. 茄子 注意：如果在单一列表项中包含了多个段落，为了保证渲染正常，*与段落首字母之间必须保留四个空格。（如果在列表中加入了区块引用，也要缩进4个空格） 分割线*** --- eg: 强调使用 * 或 _ 包裹字符即可。使用单一符号时效果是斜体，使用两个符号标记的效果是加粗； *这里是斜体* _这里是斜体_ eg: 这里是斜体 **这里是加粗** __这里是加粗__ eg: 这里是加粗 高级应用插入代码块使用反引号进行包裹即可； 如果插入一整段代买，需要至少两个以上反引号进行包裹； ` ` `JavaScript //此处声明语言，以便生成高亮效果 function YaoRemu(){ document.write("Hello MarkDown!"); } ` ` ` eg: 123function YaoRemu(){ document.write("Hello MarkDown!");} 插入表格表头|条目一|条目二 :---:|:---:|:---: 项目|项目一|项目二 eg: 表头 条目一 条目二 项目 项目一 项目二 注意：三个杆左右的冒号用于控制对齐方式，只放置左边冒号表示文字居左，只放置右边冒号表示文字具有，两边都放置表示文字居中。 其他特殊符号处理：在使用特殊符号时，需要插入反斜杠； eg: \\ 输出: \ 给文字上色手动添加标签’’’’保存即可； eg: 我是蓝色]]></content>
      <categories>
        <category>教学</category>
      </categories>
      <tags>
        <tag>MarkDown基本语法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[No3. Telnet]]></title>
    <url>%2F2019%2F03%2F18%2FciscoTelnet%2F</url>
    <content type="text"><![CDATA[拓扑图: 配置命令: 首先开启Vlan: enable configure terminal interface vlan 1 no shutdown eg: 配置交换机：设置Vlan1 IP及其子网掩码: interface vlan 1 ip address 10.1.1.154 255.255.255.0 exit 设置进入系统视图的密码：enable password **** 设置五条虚拟链接：line vty 0 4 设置特权等级[级别越高权限越大]：privilege level 1 0 设置远程链接(Telnet)的密码：password cisco 设置login验证[如果只设置login,直接输入密码即可；如果设置了login local，则需要输入用户名以及密码]:login 退出VTY[VTY(Virtual typle terminal)虚拟类型终端]的配置：exit 使用PC与交换机进行Telnet测试:Telnet 10.1.1.154 (输入前面密码即可) eg: 结果:]]></content>
      <categories>
        <category>Cisco</category>
      </categories>
      <tags>
        <tag>Cisco基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySql服务安装]]></title>
    <url>%2F2019%2F03%2F17%2FMySql%E6%9C%8D%E5%8A%A1%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[安装过程 先添加安装文件中bin文件夹到用户环境变量(这样才可以使用命令) mysqld –initialize（执行初始化【不添加用户名】/此处注意，如果安装提示出错，可以删除 [data] 文件夹后重试 ） mysqld install (安装MySql) （由于之前已经安装过，所以这里提示 已存在） net start mysql(启动MySql服务) 完成！ 注意：要正确配置[my.ini]中的文件！！！]]></content>
      <categories>
        <category>安装</category>
      </categories>
      <tags>
        <tag>安装教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于我的博客]]></title>
    <url>%2F2019%2F03%2F16%2F%E7%AE%80%E4%BB%8B%2F</url>
    <content type="text"><![CDATA[~~ 欢迎各位道友!~~]]></content>
  </entry>
</search>
